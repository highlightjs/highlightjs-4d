/*! `4d` grammar compiled for Highlight.js 11.9.0 */
var hljsGrammar=(()=>{"use strict";function e(e){
return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e
}return e((e=>{
const n=e.regex,r=["Begin SQL","End SQL","For each","End for each","If","Else","End if","Case of","End case","For","End","if","End for","Use","End use","While","End while","Repeat","Until","Class extends","Class constructor","Function","var","property","return","break","continue","DECLARE"]
;var a={keyword:r,$pattern:/(\w+)/,relevance:10,
literal:["False","True","Null","Undefined","This","Variant","Integer","Picture","Text","Collection","Object","Pointer","Real","4D","cs"]
},t={scope:"function",begin:"\\b(?!("+r.join("|")+")\\b)((\\p{L}+\\s?)+)(?=\\()"
},i={scope:"operator",match:n.either(/:=/,/\|\|/,/&&/)},s={
scope:"variable.global",match:n.either(/\p{L}+/u)},o={scope:"variable.local",
match:n.either(/\$\p{L}+/u)},l={className:"variable.interprocess",
begin:"<>"+s.begin},c={scope:"string",begin:'"',end:'"',illegal:"\\n",
contains:[e.BACKSLASH_ESCAPE],relevance:0
},d=e.COMMENT("//","[^\\\\]$"),p=e.COMMENT("`","[^\\\\]$");return{
unicodeRegex:!0,aliases:["4d"],keywords:a,contains:[d,e.C_BLOCK_COMMENT_MODE,p,{
begin:"Begin SQL",end:"End SQL",subLanguage:"sql",relevance:0},t,i,{
scope:"literal",begin:"![0-9]+",end:"!"},{scope:"literal",begin:"\\?[0-9]+",
end:"\\?"},l,o,{className:"variable.array",begin:"\\[{2}",end:"\\]{2}"},{
scope:"property.function",begin:"\\.[a-zA-Z0-9]+(?=\\()"},{scope:"property",
begin:"\\.[a-zA-Z0-9]+"},c,{scope:"number",
begin:"(-?)(\\b0[xX][a-fA-F0-9]+|(\\b[\\d]+(\\.[\\d]*)?|\\.[\\d]+)([eE][-+]?[\\d]+)?)(?!D)"
}]}}))})();export default hljsGrammar;